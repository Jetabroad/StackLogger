//main IDL file, to define the COM interfaces to be accessed by managed world.
import "oaidl.idl";
import "ocidl.idl";

[
	uuid(A153AF4D-36CE-4053-9C18-9F099CABF249),
	version(2.0)
]
library StackLogger
{
	[
		object,
		local,
		uuid(E7CEBDB1-E8A5-40F9-BBEB-DC0B376D3444),
		pointer_default(unique)
	]
	interface IObjectDescriptor : IUnknown
	{
		[propget] HRESULT Type([out, retval] BSTR *name);
		[propget] HRESULT Value([out, retval] IUnknown **value);
	};

	[
		object,
		local,
		uuid(3D19AB7B-E022-4418-8358-182C57AFED43),
		pointer_default(unique)
	]
	interface IObjectDescriptor2 : IObjectDescriptor
	{
		[propget] HRESULT Name([out, retval] BSTR *name);
	};

	[
		object,
		local,
		uuid(ED79F4B1-7987-4F2D-BA82-3EB0332D9E2E),
		pointer_default(unique)
	]
	interface IUnknownValue : IUnknown
	{
	};

	[
		object,
		local,
		uuid(1FDAB9BD-3BC9-4EDF-A6FD-FD3DA8FBFE6F),
		pointer_default(unique)
	]
	interface INullValue : IUnknown
	{
	};

	[
		object,
		local,
		uuid(E4F88112-CDA2-4762-AC42-349AD538B2A8),
		pointer_default(unique)
	]
	interface IRawValue : IUnknown
	{
		[propget] HRESULT Value([out, retval] SAFEARRAY(BYTE) *value);
	};

	[
		object,
		local,
		uuid(DB4DE73F-5DF3-4A28-B900-0C9AC7A47EBB),
		pointer_default(unique)
	]
	interface IStringValue : IUnknown
	{
		[propget] HRESULT Value([out, retval] BSTR *value);
	};

	[
		object,
		local,
		uuid(ABAFE622-7FE8-40F4-9F33-17406169A604),
		pointer_default(unique)
	]
	interface IArrayValue : IUnknown
	{
		[propget] HRESULT Values([out, retval] SAFEARRAY(IUnknown *) *items);
	};

	[
		object,
		local,
		uuid(0BFD63CA-465E-4A3E-9C1C-78E401888D2C),
		pointer_default(unique)
	]
	interface IComplexValue : IUnknown
	{
		[propget] HRESULT Fields([out, retval] SAFEARRAY(IObjectDescriptor2 *) *fields);
	};

	[
		object,
		local,
		uuid(A86EE8ED-B067-4366-8F23-9DD2DB09F385),
		pointer_default(unique)
	]
	interface IFrameData : IUnknown
	{
		[propget] HRESULT Parameters([out, retval] SAFEARRAY(IObjectDescriptor2 *) *params);
		[propget] HRESULT Name([out, retval] BSTR *name);
	};

	[
		object,
		local,
		uuid(E0B138FC-48D7-4D1E-B6BF-D708EAEC9711),
		pointer_default(unique)
	]
	interface IStackData : IUnknown
	{
		[propget] HRESULT Frames([out, retval] SAFEARRAY(IFrameData *) *frames);
	};

	[
		object,
		local,
		uuid(BCFF3103-E5B8-4807-9F36-E274E619CE0E),
		pointer_default(unique)
	]
	interface IOperationLog : IUnknown
	{
		[propget] HRESULT Time([out, retval] DATE *time);
		[propget] HRESULT Message([out, retval] BSTR *msg);
	};

	[
		object,
		local,
		uuid(B0B7FDE7-A41E-4264-A9B9-C073C14E4680),
		pointer_default(unique)
	]
	interface IStackLogger : IUnknown
	{
		[propget] HRESULT Enabled([out, retval] BOOL *enabled);
		[propput] HRESULT Enabled([in] BOOL enabled);

		[propget] HRESULT InternalLoggingEnabled([out, retval] BOOL *enabled);
		[propput] HRESULT InternalLoggingEnabled([in] BOOL enabled);

		[propget] HRESULT MaximumDataEntries([out, retval] LONG *number);
		[propput] HRESULT MaximumDataEntries([in] LONG number);

		[propget] HRESULT MaximumStackDepth([out, retval] LONG *depth);
		[propput] HRESULT MaximumStackDepth([in] LONG depth);

		[propget] HRESULT HasData([out, retval] BOOL *result);
		[propget] HRESULT HasOperationLogs([out, retval] BOOL *result);

		[propget] HRESULT AllData([out, retval] SAFEARRAY(IStackData *) *data);
		[propget] HRESULT Data([out, retval] IStackData **data);
		[propget] HRESULT OperationLogs([out, retval] SAFEARRAY(IOperationLog *) *logs);

		HRESULT ClearData();
		HRESULT ClearOperationLogs();
	};

	[
		uuid(525AEEF8-4464-4E9A-BFCC-CC61277E1D5E)
	]
	coclass StackLogger
	{
		[default] interface IStackLogger;
	};
}
